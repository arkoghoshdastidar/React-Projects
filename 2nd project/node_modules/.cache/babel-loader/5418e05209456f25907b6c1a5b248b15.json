{"ast":null,"code":"var _jsxFileName = \"E:\\\\Front-End Development\\\\React\\\\Projects\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport ExpensesList from './ExpensesList';\nimport { useState } from 'react';\nimport ExpensesFilter from './ExpensesFilter';\nimport ExpensesChart from './ExpensesChart';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n  const [maxValue, setMaxValue] = useState(0);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const monthExpenses = [];\n\n  for (let i = 0; i < 12; i++) monthExpenses.push({\n    value: 0,\n    label: months[i]\n  });\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    props.expenses.forEach(expense => {\n      if (filteredYear == expense.date.getFullYear()) {\n        let monthNum = expense.date.getMonth();\n        monthExpenses[monthNum].value += parseInt(expense.amount);\n\n        if (monthExpenses[monthNum].value > maxValue) {\n          setMaxValue(monthExpenses[monthNum].value);\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      maxValue: maxValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      expenses: props.expenses,\n      filteredYear: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"4iVKVUbRR5gPE9ktUYjgqTYxi7g=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["ExpensesList","useState","ExpensesFilter","ExpensesChart","Card","Expenses","props","filteredYear","setFilteredYear","maxValue","setMaxValue","months","monthExpenses","i","push","value","label","filterChangeHandler","selectedYear","expenses","forEach","expense","date","getFullYear","monthNum","getMonth","parseInt","amount"],"sources":["E:/Front-End Development/React/Projects/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import ExpensesList from './ExpensesList';\r\nimport { useState } from 'react';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = props => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    const [maxValue, setMaxValue] = useState(0);\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const monthExpenses = [];\r\n    for (let i = 0; i < 12; i++) monthExpenses.push({ value: 0, label: months[i] });\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n        props.expenses.forEach((expense) => {\r\n            if (filteredYear == expense.date.getFullYear()) {\r\n                let monthNum = expense.date.getMonth();\r\n                monthExpenses[monthNum].value += parseInt(expense.amount);\r\n                if (monthExpenses[monthNum].value > maxValue){ setMaxValue(monthExpenses[monthNum].value);}\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}></ExpensesFilter>\r\n            <ExpensesChart maxValue={maxValue}></ExpensesChart>\r\n            <ExpensesList expenses={props.expenses} filteredYear={filteredYear}></ExpensesList>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expenses;"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EAAA;;EACtB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;EACA,MAAMU,MAAM,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAf;EACA,MAAMC,aAAa,GAAG,EAAtB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6BD,aAAa,CAACE,IAAd,CAAmB;IAAEC,KAAK,EAAE,CAAT;IAAYC,KAAK,EAAEL,MAAM,CAACE,CAAD;EAAzB,CAAnB;;EAE7B,MAAMI,mBAAmB,GAAIC,YAAD,IAAkB;IAC1CV,eAAe,CAACU,YAAD,CAAf;IACAZ,KAAK,CAACa,QAAN,CAAeC,OAAf,CAAwBC,OAAD,IAAa;MAChC,IAAId,YAAY,IAAIc,OAAO,CAACC,IAAR,CAAaC,WAAb,EAApB,EAAgD;QAC5C,IAAIC,QAAQ,GAAGH,OAAO,CAACC,IAAR,CAAaG,QAAb,EAAf;QACAb,aAAa,CAACY,QAAD,CAAb,CAAwBT,KAAxB,IAAiCW,QAAQ,CAACL,OAAO,CAACM,MAAT,CAAzC;;QACA,IAAIf,aAAa,CAACY,QAAD,CAAb,CAAwBT,KAAxB,GAAgCN,QAApC,EAA6C;UAAEC,WAAW,CAACE,aAAa,CAACY,QAAD,CAAb,CAAwBT,KAAzB,CAAX;QAA4C;MAC9F;IACJ,CAND;EAOH,CATD;;EAWA,oBACI,QAAC,IAAD;IAAM,SAAS,EAAC,UAAhB;IAAA,wBACI,QAAC,cAAD;MAAgB,QAAQ,EAAER,YAA1B;MAAwC,cAAc,EAAEU;IAAxD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,aAAD;MAAe,QAAQ,EAAER;IAAzB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,YAAD;MAAc,QAAQ,EAAEH,KAAK,CAACa,QAA9B;MAAwC,YAAY,EAAEZ;IAAtD;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAzBD;;GAAMF,Q;;KAAAA,Q;AA2BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}